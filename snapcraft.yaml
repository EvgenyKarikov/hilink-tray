name: hilink-tray
version: 4.1.1
summary: Hilink Tray
description: Displays signal level in a tray at Huawei modems on HiLink firmware

grade: stable
confinement: strict

apps:
  hilink-tray:
    command: desktop-launch alsa-launch $SNAP/usr/bin/hilink-tray
    plugs:
      - desktop
      - pulseaudio

parts:
  hilink-tray:
    source: https://github.com/ilya-fedin/hilink-tray.git
    plugin: nil
    after:
      - alsa
      - desktop-glib-only
      - patches
    stage-packages:
      - python
      - python-pyside
      - python-pyaudio
    stage:
      - -usr/lib/x86_64-linux-gnu/alsa-lib
      - -usr/lib/x86_64-linux-gnu/libasound.so*
      - -usr/share/alsa
    build : |
      echo "Patching for audio notification support"
      patch -p1 < "$SNAPCRAFT_STAGE/patches/pyaudio.patch"
      echo "Copying hilink to $SNAPCRAFT_PART_INSTALL/usr/lib/python2.7/dist-packages"
      cp -r hilink "$SNAPCRAFT_PART_INSTALL/usr/lib/python2.7/dist-packages"
      echo "Creating directory $SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray"
      mkdir -p "$SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray"
      echo "Copying images/icon_signal_05.png to $SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray/hilink-tray.png"
      cp images/icon_signal_05.png "$SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray/hilink-tray.png"
      echo "Copying sounds to $SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray"
      cp -r sounds "$SNAPCRAFT_PART_INSTALL/usr/share/hilink-tray"
      echo "Copying hilink-tray.py to $SNAPCRAFT_PART_INSTALL/usr/bin/hilink-tray"
      cp hilink-tray.py "$SNAPCRAFT_PART_INSTALL/usr/bin/hilink-tray"

  patches:
    source: patches
    plugin: nil
    build: |
      echo "Creating directory $SNAPCRAFT_STAGE/patches"
      mkdir -p "$SNAPCRAFT_STAGE/patches"
      echo "Copying patches to $SNAPCRAFT_STAGE/patches"
      cp -r * "$SNAPCRAFT_STAGE/patches"

# https://github.com/diddledan/snapcraft-alsa
  alsa-lib:
    plugin: autotools
    source: http://archive.ubuntu.com/ubuntu/pool/main/a/alsa-lib/alsa-lib_1.1.3.orig.tar.bz2
    # source: ftp://ftp.alsa-project.org/pub/lib/alsa-lib-1.1.5.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --with-configdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/alsa
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    organize:
      snap/*/current/usr/lib/*: usr/lib/
      snap/*/current/usr/share/*: usr/share/
    stage:
    - usr/include
    - usr/lib
    - usr/share/alsa
    prime:
    - -usr/lib/*.la
    - -usr/lib/pkgconfig

  alsa-plugins:
    after: [alsa-lib]
    plugin: autotools
    source: http://archive.ubuntu.com/ubuntu/pool/main/a/alsa-plugins/alsa-plugins_1.1.1.orig.tar.bz2
    # source: ftp://ftp.alsa-project.org/pub/plugins/alsa-plugins-1.1.5.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --disable-oss
    - --disable-usbstream
    - --disable-arcamav
    - --disable-avcodec
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    organize:
      snap/*/current/usr/lib/*: usr/lib/
    stage:
    - lib
    - usr/lib
    - usr/share/alsa
    prime:
    - -usr/lib/alsa-lib/*.la
    build-packages:
    - libpulse-dev
    stage-packages:
    - libpulse0

  alsa:
    plugin: nil
    after: [alsa-plugins, alsa-lib]
    prepare: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }
      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash
      if [ "\$SNAP_ARCH" == "amd64" ]; then
        ARCH="amd64-linux-gnu"
      elif [ "\$SNAP_ARCH" == "armhf" ]; then
        ARCH="arm-linux-gnueabihf"
      elif [ "\$SNAP_ARCH" == "arm64" ]; then
        ARCH="aarch64-linux-gnu"
      else
        ARCH="\$SNAP_ARCH-linux-gnu"
      fi
      export LD_LIBRARY_PATH="\$SNAP/usr/lib/alsa-lib:\$SNAP/usr/lib/\$ARCH/pulseaudio:\$LD_LIBRARY_PATH"
      export ALSA_CONFIG_PATH="\$SNAP/etc/alsa.conf"
      exec "\$@"
      EOF
    install: |
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/bin alsa-launch
